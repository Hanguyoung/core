//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace openEXI.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("openEXI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] EmptySchema {
            get {
                object obj = ResourceManager.GetObject("EmptySchema", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;US-ASCII&quot; ?&gt;
        ///&lt;Root&gt;
        ///  &lt;msg id=&quot;1&quot;&gt;The specified index {0} is out of the range (min:{1}-max:{2}).&lt;/msg&gt;
        ///&lt;/Root&gt;
        ///.
        /// </summary>
        internal static string EXISchemaRuntimeExceptionXMsg {
            get {
                return ResourceManager.GetString("EXISchemaRuntimeExceptionXMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] FixtureGrammars {
            get {
                object obj = ResourceManager.GetObject("FixtureGrammars", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] FixtureNamesNoNamespace {
            get {
                object obj = ResourceManager.GetObject("FixtureNamesNoNamespace", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] FixtureNamesXmlNamespace {
            get {
                object obj = ResourceManager.GetObject("FixtureNamesXmlNamespace", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] FixtureNamesXsdNamespace {
            get {
                object obj = ResourceManager.GetObject("FixtureNamesXsdNamespace", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] FixtureNamesXsiNamespace {
            get {
                object obj = ResourceManager.GetObject("FixtureNamesXsiNamespace", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] FixtureTypes {
            get {
                object obj = ResourceManager.GetObject("FixtureTypes", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Grammar {
            get {
                object obj = ResourceManager.GetObject("Grammar", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] HeaderOptions {
            get {
                object obj = ResourceManager.GetObject("HeaderOptions", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;US-ASCII&quot; ?&gt;
        ///&lt;Root&gt;
        ///  &lt;msg id=&quot;1&quot;&gt;Manifested size and the actual size of the binary data do not match.&lt;/msg&gt;
        ///  &lt;msg id=&quot;2&quot;&gt;Manifested binary data size &quot;{0}&quot; is too large to handle for alignment types compress or preCompress.&lt;/msg&gt;
        ///  &lt;msg id=&quot;3&quot;&gt;Prefix cannot be null.&lt;/msg&gt;
        ///&lt;/Root&gt;
        ///.
        /// </summary>
        internal static string ScriberRuntimeExceptionXMsg {
            get {
                return ResourceManager.GetString("ScriberRuntimeExceptionXMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;US-ASCII&quot; ?&gt;
        ///&lt;Root&gt;
        ///  &lt;msg id=&quot;1&quot;&gt;Manifested size and the actual size of the binary data do not match.&lt;/msg&gt;
        ///  &lt;msg id=&quot;2&quot;&gt;Manifested binary data size &quot;{0}&quot; is too large to handle for alignment types compress or preCompress.&lt;/msg&gt;
        ///  &lt;msg id=&quot;3&quot;&gt;Prefix cannot be null.&lt;/msg&gt;
        ///&lt;/Root&gt;
        ///.
        /// </summary>
        internal static string ScriberRuntimeExceptionXMsg1 {
            get {
                return ResourceManager.GetString("ScriberRuntimeExceptionXMsg1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;US-ASCII&quot; ?&gt;
        ///&lt;Root&gt;
        ///  &lt;msg id=&quot;1&quot;&gt;Element &quot;{0}&quot; of namespace &quot;{1}&quot; is not expected.&lt;/msg&gt;
        ///  &lt;msg id=&quot;2&quot;&gt;Attribute &quot;{0}&quot; of namespace &quot;{1}&quot; with value &quot;{2}&quot; is not expected.&lt;/msg&gt;
        ///  &lt;msg id=&quot;3&quot;&gt;Unexpected characters &quot;{0}&quot; encountered.&lt;/msg&gt;
        ///  &lt;msg id=&quot;4&quot;&gt;Binary value is not expected here.&lt;/msg&gt;
        ///  &lt;msg id=&quot;5&quot;&gt;SAX feature &quot;{0}&quot; is not supported.&lt;/msg&gt;
        ///  &lt;msg id=&quot;6&quot;&gt;{0}&lt;/msg&gt;&lt;!-- SAX error --&gt;
        ///  &lt;msg id=&quot;7&quot;&gt;End of element for &quot;{0}&quot; of namespace &quot;{1}&quot; is not expected.&lt;/msg&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TransmogrifierExceptionXMsg {
            get {
                return ResourceManager.GetString("TransmogrifierExceptionXMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;US-ASCII&quot; ?&gt;
        ///&lt;Root&gt;
        ///  &lt;msg id=&quot;1&quot;&gt;SAX property &quot;{0}&quot; is not supported.&lt;/msg&gt;
        ///  &lt;msg id=&quot;2&quot;&gt;Could not instantiate an XMLReader.&lt;/msg&gt;
        ///  &lt;msg id=&quot;3&quot;&gt;SAXParser factory for use with Transmogrifier needs to be aware of namespaces.&lt;/msg&gt;
        ///&lt;/Root&gt;
        ///.
        /// </summary>
        internal static string TransmogrifierRuntimeExceptionXMsg {
            get {
                return ResourceManager.GetString("TransmogrifierRuntimeExceptionXMsg", resourceCulture);
            }
        }
    }
}
